vigenere_primer.txt

• Simple form of polyaphabetic subsitution
• A table of values (tabula recta) is used to encrypt
•Table consists of the alphabet (in this case ASCII?) written out in rows, and shifted cyclically
• At different points in the encryption process, the cipher uses a different alphabet from one of the rows. The alphabet used at each point depends on a  repeating keyword

#Encryption Method
• Plaintext is matched with a key. The key is repeated untill plaintext and key match
• The resulting pair of letters is used as a “ordered pair” to pick a letter from the tabula recta
   ◦ Key is y axis, plaintext is x axis
#Decryption Method
• Reverse of above

#Goal: decrypt ciphertext 1
• Plaintext ASCII
• Key is upper/lower case & alphanumeric
   ◦ No punctuation or special chars
• Map[16][16]: Will ultimately give, the ciphertext’s 4 higher or lower bits (ch,cl))]]
• Check slides for full rundown

#Info:
• The strength of the Vigenère Cipher is that the same letter can be encrypted in different ways. For example, if the keyword is KING, then every plaintext letter can be encrypted in 4 ways, because the keyword contains 4 letters
   ◦ The word ’the’ could be enciphered as DPR, BUK, GNO and ZRM depending on its position relative to the keyword
   ◦ The important point to note is that if there are only four ways to encipher the word ’the’, and the original message contains several uses of the word ’the’, then it is inevitable that some of the four possible encipherments will be repeated in the ciphertext.

#Example of how to break
keyword    = kingkingkingkingkingking
Plaintext  = thesunandthemaninthemoon
Ciphertext = DPRYEVNTNBUKWIAOXBUKWWBT
   ◦ Notice the word BUK appears twice
   ◦ The reason for the repetition of BUK is that the second ’the’ is displaced by 8 letters with respect to the third ’the’, and 8 is a multiple of the length of the keyword
   ◦ So it may be critical to look for repititions in the ciphertext, and their relationship to eachother to derive repitition in the keyword
   ◦ By the time we reach the third ’the’, the keyword has cycled round exactly twice, to repeat the relationship
   ◦ So seeing how far apart repeated characters are will give us the length of the key as a single piece of text

http://www.simonsingh.net/The_Black_Chamber/vigenere_cracking_tool.html → check out this tool. We will probably have to rip it off somehow

# Current idea of how to break:
• Find most frequently occuring spacing amount between repeated characters using method above (defined as “repeating length string”)
• Each letter in the “repeating length string” represents 1 row in the table
• Then perform frequency analysis of common character usage
   ◦ That kind of data must exist somewhere
   ◦ Not too sure where to go from there

